// generator func aise funciton hote h jinke execution ko hum
// bich m pause and resume kr skte h

// function* simpleGenerator() {
//     console.log("simple generator")
//     yield 20;
//     yield 30;
//     yield 49;
//     console.log("simple generator end")
// }

// let sG =  simpleGenerator()
// hum is trh s yha pr generator func ka instance bnate h, or next() func s is instance
// ki value ko access krte h

// console.log("output", sG.next())  // { value: 20, done: false }
// console.log("output", sG.next())  //  { value: 30, done: false }
// console.log("output", sG.next())  // { value: 49, done: false }
// console.log("output", sG.next()) //  simple generator end { value: undefined, done: true }


// Random num generated by generator
function* simpleGenerator() {
    let i = 100
    while (true) {
        i++
        yield i
    }
}

let sG = simpleGenerator()

console.log("random num", sG.next()) // random num { value: 101, done: false }
console.log("random num", sG.next()) // random num { value: 102, done: false }
console.log("random num", sG.next()) // random num { value: 103, done: false }
console.log("random num", sG.next()) // random num { value: 104, done: false }